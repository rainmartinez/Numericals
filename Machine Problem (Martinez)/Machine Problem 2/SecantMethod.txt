//Source code for secant method
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Secant_Method
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
            textBox1.Select();
         
        }
        int i = 0, count = 0, cnt = 0;

        double eps = 0.00001;

        double[] coeff = new double[10];
        double x0, x1, x2 = 0;
        double fx0 = 0, fx1 = 0, fx2 = 0, temp = 0;
        int a = 0;

        public int check()
        {

            x0 = double.Parse(textBox5.Text);
            x1 = double.Parse(textBox6.Text);

            fx0 = fx1 = fx2 = 0;

            for (i = 3; i >= 1; i--)
            {
                fx0 += coeff[i] * (Math.Pow(x0, i));
                fx1 += coeff[i] * (Math.Pow(x1, i));
            }

            fx0 += coeff[0];
            fx1 += coeff[0];

            if (fx0 == fx1)
            {

                MessageBox.Show("Try Another Initial Values");
                return (1);
            }
            return (0);
        }
        private void button1_Click(object sender, EventArgs e)
        {
            coeff[0] = double.Parse(textBox4.Text);
            coeff[1] = double.Parse(textBox3.Text);
            coeff[2] = double.Parse(textBox2.Text);
            coeff[3] = double.Parse(textBox1.Text);

            do
            {
                a = check();
                if (a != 0)
                {
                    Close();
                    break;
                }
            } while (check() != 0);
            cnt = 1;

            if (cnt == 1)
            {

                do
                {

                    count++;
                    fx0 = fx1 = fx2 = 0;

                    listBox1.Items.Add(count);
                    listBox2.Items.Add(Math.Round(x0, 4));
                    listBox3.Items.Add(Math.Round(x1, 4));

                    for (i = 3; i >= 1; i--)
                    {

                        fx0 += coeff[i] * (Math.Pow(x0, i));
                        fx1 += coeff[i] * (Math.Pow(x1, i));

                    }

                    fx0 += coeff[0];
                    listBox5.Items.Add(Math.Round(fx0, 4));

                    fx1 += coeff[0];
                    listBox6.Items.Add(Math.Round(fx1, 4));

                    temp = x2;

                    x2 = x0 - ((fx0) * ((x1 - x0) / (fx1 - fx0)));
                    listBox4.Items.Add(Math.Round(x2, 4));

                    for (i = 3; i >= 1; i--)
                    {

                        fx2 += coeff[i] * (Math.Pow(x2, i));

                    }
                    fx2 += coeff[0];
                    listBox7.Items.Add(Math.Round(fx2, 4));

                    x0 = x1;
                    x1 = x2;
                    fx2 = 0;

                } while ((Math.Abs(temp - x2)) >= eps);
                textBox7.Text = (Convert.ToString(Math.Round(x2, 4)));
            }

        }

        private void button2_Click(object sender, EventArgs e)
        {
            listBox1.Items.Clear();
            listBox2.Items.Clear();
            listBox3.Items.Clear();
            listBox4.Items.Clear();
            listBox5.Items.Clear();
            listBox6.Items.Clear();
            listBox7.Items.Clear();
            textBox1.Clear();
            textBox2.Clear();
            textBox3.Clear();
            textBox4.Clear();
            textBox5.Clear();
            textBox6.Clear();
            textBox7.Clear();
        }
    }
}
